<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javaex.dao.MainDao">

    <!-- ResultMap -->
    <resultMap id="RReviewVo" type="map">
        <result column="review_no" property="reviewNo"/>
        <result column="book_no" property="bookNo"/>
        <result column="review_content" property="reviewContent"/>
        <result column="nickname" property="nickname"/>
        <result column="style_name" property="styleName"/>
        <result column="imgurl" property="imgurl"/>
        <result column="videourl" property="videourl"/>
        <result column="emo_no" property="emoNo"/>

        <result column="user_no" property="userNo"/>
        <result column="style_no" property="styleNo"/>
        <result column="review_date" property="reviewDate"/>
        <result column="emo_name" property="emoName"/>
    </resultMap>

    <resultMap id="emotionMap" type="map">
        <result property="emoName" column="emo_name"/>
        <result property="emoNo" column="emo_no"/>
        <result property="totalReviewCnt" column="totalReviewCnt"/>
    </resultMap>

    <select id="getEmotion" resultMap="emotionMap">
		<![CDATA[
        select et.emo_name,
               emo_no,
               totalReviewCnt
        from emotion et
                 left outer join (select count(review_no) totalReviewCnt,
                                         emo_name
                                  from review,
                                       emotion,
                                       style
                                  where review.style_no = style.style_no
                                    and style.emo_no = emotion.emo_no
                                  group by emo_name) ct
                                 on et.emo_name = ct.emo_name
        ]]>
	</select>

    <select id="getReviewListByEmo" parameterType="Long" resultMap="RReviewVo">
		<![CDATA[
        select innertab.review_content,
               innertab.review_no,
               innertab.nickname,
               innertab.book_no,
               innertab.style_name,
               innertab.imgurl,
               innertab.videourl,
               innertab.emo_no
        from (select review_content,
                     review_no,
                     nickname,
                     review.book_no,
                     style_name,
                     imgurl,
                     videourl,
                     emotion.emo_no
              from review,
                   users,
                   style,
                   emotion
              where users.user_no = review.user_no
                and review.style_no = style.style_no
                and style.emo_no = emotion.emo_no
                and emotion.emo_no = #{emoNo}
              order by RAND()) innertab limit 19
        ]]>
	</select>

    <select id="getReviewListByPly" parameterType="Long" resultMap="RReviewVo">
		<![CDATA[
        select outtab.review_content,
               outtab.review_no,
               outtab.nickname,
               outtab.book_no,
               outtab.style_name,
               outtab.emo_name
        from (select innertab.review_content,
                     innertab.review_no,
                     innertab.nickname,
                     innertab.book_no,
                     innertab.style_name,
                     innertab.emo_name
              from playlist_review,
                   (select review_content,
                           review_no,
                           nickname,
                           book_no,
                           style_name,
                           emo_name
                    from users,
                         review,
                         emotion,
                         style
                    where users.user_no = review.user_no
                      and review.style_no = style.style_no
                      and style.emo_no = emotion.emo_no) innertab
              where playlist_review.review_no = innertab.review_no
                and playlist_no = #{playlistNo}
              order by RAND()) outtab limit 19
        ]]>
	</select>

    <select id="getMusicListByEmo" parameterType="Long" resultType="com.javaex.dto.playlist.MusicDTO">
		<![CDATA[
        select emo.music_title musicTitle,
               emo.artist,
               emo.music_path  musicPath
        from (select music_title,
                     artist,
                     music_path
              from music,
                   emotion
              where music.emo_no = emotion.emo_no
                and music.emo_no = #{emoNo}
              order by RAND()) emo limit 6
        ]]>
	</select>

    <select id="getMusicListByPly" parameterType="Long" resultType="com.javaex.dto.playlist.MusicDTO">
		<![CDATA[
        select innertab.music_title musicTitle,
               innertab.music_path  musicPath,
               innertab.artist
        from (select music_title,
                     music_path,
                     artist,
                     music.emo_no
              from music,
                   playlist
              where music.emo_no = playlist.emo_no
                and playlist_no = #{playlistNo}
              order by RAND()) innertab limit 6
        ]]>
	</select>

    <select id="getTotalEmoTagCnt" resultType="Long">
		<![CDATA[
        select outtab.emo_no
        from (select innertab.totalCnt,
                     innertab.emo_no
              from (select count(review_no) totalCnt,
                           emotion.emo_no
                    from review,
                         emotion,
                         style
                    where review.style_no = style.style_no
                      and style.emo_no = emotion.emo_no
                    group by emotion.emo_no) innertab
              where totalCnt > 0
              order by RAND()) outtab limit 1
        ]]>
	</select>

    <!--************** 플레이리스트 목록 가져오기 ****************-->
    <!-- (1) 내가 만든 플리 -->
    <select id="getMyPlaylist" parameterType="Long" resultType="com.javaex.dto.playlist.PlaylistDTO">
		<![CDATA[
        select playlist_name    playlistName,
               playlist_no      playlistNo,
               emo_name         emoName,
               nickname,
               playlist.user_no userNo
        from playlist,
             emotion,
             users
        where playlist.user_no = users.user_no
          and emotion.emo_no = playlist.emo_no
          and users.user_no = #{userNo}
        ]]>
	</select>

    <!-- (2) 좋아요한 플리 -->
    <select id="getLikeMyPlaylist" parameterType="Long" resultType="com.javaex.dto.playlist.PlaylistDTO">
		<![CDATA[
        select playlist_name        playlistName,
               playlist.playlist_no playlistNo,
               emo_name             emoName,
               nickname,
               playlist.user_no     userNo
        from user_playlist,
             playlist,
             emotion,
             users
        where user_playlist.playlist_no = playlist.playlist_no
          and playlist.emo_no = emotion.emo_no
          and playlist.user_no = users.user_no
          and user_playlist.user_no = #{userNo}
          and playlist.user_no not in (#{userNo})
        ]]>
	</select>

    <insert id="addNewPlaylist" parameterType="com.javaex.dto.main.AddPlayListRequest" useGeneratedKeys="true">
        <selectKey keyProperty="playlistNo" resultType="Long" order="BEFORE">
            SELECT LAST_INSERT_ID()
        </selectKey>

        <![CDATA[
			insert into playlist
			values(#{playlistNo}, #{userNo}, now(), #{playlistName}, #{emoNo})
		]]>
    </insert>

    <insert id="addNewPlaylistAtUser" parameterType="com.javaex.dto.playlist.PlaylistDTO">
		<![CDATA[
        insert into user_playlist
        values (seq_user_playlist_no.nextval, #{userNo}, #{playlistNo})
        ]]>
	</insert>

    <insert id="addReviewToPly" parameterType="map">
        <selectKey keyProperty="playlist_review_no" resultType="Long" order="BEFORE">
            SELECT LAST_INSERT_ID()
        </selectKey>
		<![CDATA[
        insert into playlist_review
        values (seq_playlist_review_no.nextval, #{playlistNo}, #{reviewNo}, now())
        ]]>
	</insert>

    <select id="alreadyAdded" parameterType="map" resultType="Long">
		<![CDATA[
        select count(playlist_review_no)
        from playlist_review,
             playlist,
             users
        where playlist_review.playlist_no = playlist.playlist_no
          and playlist.user_no = users.user_no
          and review_no = #{reviewNo}
          and playlist.playlist_no = #{playlistNo}
          and users.user_no = #{userNo}
        ]]>
	</select>

    <delete id="deleteReviewFromPly" parameterType="map">
		<![CDATA[
        delete
        from playlist_review
        where playlist_no = #{playlistNo}
          and review_no = #{reviewNo}
        ]]>
	</delete>

    <select id="alreadyLiked" parameterType="map" resultType="Long">
		<![CDATA[
        select count(review_user_no)
        from review_user
        where review_no = #{reviewNo}
          and user_no = #{userNo}
        ]]>
	</select>

    <insert id="likeReview" parameterType="map" useGeneratedKeys="true" keyProperty="review_user_no">
		<![CDATA[
        insert into review_user(review_user_no, user_no, review_no, review_like_date)
        values (review_user_no, #{userNo}, #{reviewNo}, now())
        ]]>
	</insert>

    <delete id="cancelLike" parameterType="map">
		<![CDATA[
        delete
        from review_user
        where user_no = #{userNo}
          and review_no = #{reviewNo}
        ]]>
	</delete>

    <select id="getReviewInfo" parameterType="int" resultMap="RReviewVo">
		<![CDATA[
        select review_content,
               style_name,
               nickname,
               imgurl,
               videourl
        from review,
             users,
             style
        where review.user_no = users.user_no
          and review.style_no = style.style_no
          and review_no = #{reviewNo}
        ]]>
	</select>
</mapper>