<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javaex.dao.MybookDao">

	<resultMap id="reviewNoAndUserNo" type="map">
		<result property="userNo" column="user_no"/>
		<result property="reviewNo" column="review_no"/>
	</resultMap>

    <!-- getUserReviews -->
    <select id="getUserReviews" resultType="com.javaex.dto.mybook.UserReviewDTO" parameterType="Long">
		<![CDATA[
        select r.review_no                      reviewNo,
               b.book_title                     bookTitle,
               b.book_no                        bookNo,
               r.user_no                        userNo,
               r.nickname,
               r.review_content                 reviewContent,
               r.style_no                       styleNo,
               r.emo_name                       emoName,
               IFNULL(r.likecnt, 0)             likecnt,
               DATE_FORMAT(now(), 'yyyy/mm/dd') reviewDate
        from (select r.review_no,
                     ru.likecnt,
                     r.style_no,
                     r.emo_name,
                     r.user_no,
                     r.book_no,
                     r.nickname,
                     r.review_content,
                     r.review_date
              from (select r.review_no,
                           s.style_no,
                           e.emo_no,
                           e.emo_name,
                           r.book_no,
                           u.user_no,
                           u.nickname,
                           r.review_content,
                           r.review_date
                    from REVIEW r,
                         STYLE s,
                         EMOTION e,
                         USERS u
                    where e.emo_no = s.emo_no
                      and r.style_no = s.style_no
                      and r.user_no = u.user_no) r
                       left outer join (select review_no, count(review_no) likecnt
                                        from review_user
                                        group by review_no) as ru
                                       on r.review_no = ru.review_no) r,
             boggle.BOOKS b
        where r.book_no = b.book_no
          and r.user_no = #{userNo}
        ORDER BY reviewDate desc
        ]]>

	</select>

    <!-- getPopularReviews -->
    <select id="getPopularReviews" resultType="com.javaex.dto.mybook.UserReviewDTO" parameterType="Long">
		<![CDATA[
        select r.review_no                          reviewNo,
               b.book_title                         bookTitle,
               b.book_no                            bookNo,
               r.user_no                            userNo,
               r.nickname,
               r.review_content                     reviewContent,
               r.style_no                           styleNo,
               r.emo_name                           emoName,
               NVL(r.likecnt, 0)                    likecnt,
               to_char(r.review_date, 'yyyy/mm/dd') reviewDate
        from (select r.review_no,
                     ru.likecnt,
                     r.style_no,
                     r.emo_name,
                     r.user_no,
                     r.book_no,
                     r.nickname,
                     r.review_content,
                     r.review_date
              from (select r.review_no,
                           s.style_no,
                           e.emo_no,
                           e.emo_name,
                           r.book_no,
                           u.user_no,
                           u.nickname,
                           r.review_content,
                           r.review_date
                    from review r,
                         style s,
                         emotion e,
                         users u
                    where e.emo_no = s.emo_no
                      and r.style_no = s.style_no
                      and r.user_no = u.user_no) r,
                   (select review_no, count(review_no) likecnt
                    from review_user
                    group by review_no) ru
              where r.review_no = ru.review_no(+)) r,
             books b
        where r.book_no = b.book_no
          and r.user_no = #{userNo}
        ORDER BY likecnt desc
        ]]>
	</select>

    <!-- checkLike -->
    <select id="checkLike" resultType="Long" parameterType="map">
		<![CDATA[
        select count(REVIEW_USER_NO)
        from review_user
        where user_no = #{userNo}
          and review_no = #{reviewNo}
        ]]>
	</select>

    <!-- insertLike -->
    <insert id="insertLike" parameterType="com.javaex.dto.mybook.LikeDTO">
		<![CDATA[
        insert into review_user
        values (SEQ_REVIEW_USER_NO.nextval, #{userNo}, #{reviewNo}, now())
        ]]>
	</insert>

    <!-- dislike -->
    <delete id="deleteLike" parameterType="map">
		<![CDATA[
        delete
        from review_user
        where user_no = #{userNo}
          and review_no = #{reviewNo}
        ]]>
	</delete>


    <!-- getLikeCount -->
    <select id="getLikeCount" resultType="com.javaex.dto.mybook.LikeCountResponse" parameterType="Long">
		<![CDATA[
        select r.review_no          reviewNo,
               r.user_no            userNo,
               r.nickname           nickname,
               IFNULL(r.likecnt, 0) likeCnt
        from (select r.review_no,
                     ru.likecnt,
                     r.style_no,
                     r.emo_name,
                     r.user_no,
                     r.book_no,
                     r.nickname,
                     r.review_content,
                     r.review_date
              from (select r.review_no,
                           s.style_no,
                           e.emo_no,
                           e.emo_name,
                           r.book_no,
                           u.user_no,
                           u.nickname,
                           r.review_content,
                           r.review_date
                    from review r,
                         style s,
                         emotion e,
                         users u
                    where e.emo_no = s.emo_no
                      and r.style_no = s.style_no
                      and r.user_no = u.user_no) r
                       left outer join
                   (select review_no,
                           count(review_no) likecnt
                    from review_user
                    group by review_no) ru
                   on r.review_no = ru.review_no) r,
             books b
        where r.book_no = b.book_no
          and r.review_no = #{reviewNo};
        ]]>
	</select>

    <!-- 좋아요 최신순에따른 ,유저 n번이 좋아요한 서평 -->
    <!-- like1 -->
    <select id="latestUserLikeReviews" resultType="com.javaex.dto.mybook.LatestUserLikeReviewsDTO" parameterType="Long">
		<![CDATA[
        select r.reviewLikeDate,
               r.reviewNo,
               r.bookTitle,
               r.bookNo,
               r.userNo,
               r.nickname,
               r.reviewContent,
               r.styleNo,
               r.emoName,
               IFNULL(r.likecnt, 0) likeCnt,
               r.reviewDate
        from (select ru.review_like_date reviewLikeDate,
                     r.reviewNo,
                     r.bookTitle,
                     r.bookNo,
                     r.userNo,
                     r.nickname,
                     r.reviewContent,
                     r.styleNo,
                     r.emoName,
                     r.likecnt,
                     r.reviewDate
              from (select r.review_no                            reviewNo,
                           b.book_title                           bookTitle,
                           b.book_no                              bookNo,
                           r.user_no                              userNo,
                           r.nickname,
                           r.review_content                       reviewContent,
                           r.style_no                             styleNo,
                           r.emo_name                             emoName,
                           r.likecnt,
                           date_format(r.review_date, '%Y/%m/%d') reviewDate
                    from (select r.review_no,
                                 ru.likecnt,
                                 r.style_no,
                                 r.emo_name,
                                 r.user_no,
                                 r.book_no,
                                 r.nickname,
                                 r.review_content,
                                 r.review_date
                          from (select r.review_no,
                                       s.style_no,
                                       e.emo_no,
                                       e.emo_name,
                                       r.book_no,
                                       u.user_no,
                                       u.nickname,
                                       r.review_content,
                                       r.review_date
                                from review r,
                                     style s,
                                     emotion e,
                                     users u
                                where e.emo_no = s.emo_no
                                  and r.style_no = s.style_no
                                  and r.user_no = u.user_no) r
                                   left outer join
                               (select review_no, count(review_no) likecnt
                                from review_user
                                group by review_no) ru
                               on r.review_no = ru.review_no) r,
                         books b
                    where r.book_no = b.book_no) r,
                   review_user ru
              where ru.review_no = r.reviewNo
                and user_no = #{userNo}
              ORDER BY reviewLikeDate desc) r limit 1
        ]]>
	</select>


    <!-- 유저 n번이 좋아요한 서평리스트 -->
    <!-- likelist -->
    <select id="userLikeReviews" resultType="com.javaex.dto.mybook.LatestUserLikeReviewsDTO" parameterType="Long">
		<![CDATA[
        select r.reviewLikeDate,
               r.reviewNo,
               r.bookTitle,
               r.bookNo,
               r.userNo,
               r.nickname,
               r.reviewContent,
               r.styleNo,
               r.emoName,
               NVL(r.likecnt, 0) likeCnt,
               r.reviewDate,
               r.user_profile    userProfile
        from (select ru.review_like_date reviewLikeDate,
                     r.reviewNo,
                     r.bookTitle,
                     r.bookNo,
                     r.userNo,
                     r.nickname,
                     r.reviewContent,
                     r.styleNo,
                     r.emoName,
                     r.likecnt,
                     r.reviewDate,
                     r.user_profile
              from (select r.review_no                          reviewNo,
                           b.book_title                         bookTitle,
                           b.book_no                            bookNo,
                           r.user_no                            userNo,
                           r.nickname,
                           r.review_content                     reviewContent,
                           r.style_no                           styleNo,
                           r.emo_name                           emoName,
                           r.likecnt,
                           r.user_profile,
                           to_char(r.review_date, 'yyyy/mm/dd') reviewDate
                    from (select r.review_no,
                                 ru.likecnt,
                                 r.style_no,
                                 r.emo_name,
                                 r.user_no,
                                 r.book_no,
                                 r.nickname,
                                 r.review_content,
                                 r.review_date,
                                 r.user_profile
                          from (select r.review_no,
                                       s.style_no,
                                       e.emo_no,
                                       e.emo_name,
                                       r.book_no,
                                       u.user_no,
                                       u.nickname,
                                       r.review_content,
                                       r.review_date,
                                       u.user_profile
                                from review r,
                                     style s,
                                     emotion e,
                                     users u
                                where e.emo_no = s.emo_no
                                  and r.style_no = s.style_no
                                  and r.user_no = u.user_no) r,
                               (select review_no, count(review_no) likecnt
                                from review_user
                                group by review_no) ru
                          where r.review_no = ru.review_no(+)) r,
                         books b
                    where r.book_no = b.book_no) r,
                   review_user ru
              where ru.review_no = r.reviewNo
                and user_no = #{userNo}
              ORDER BY reviewLikeDate desc) r
        where rownum <= 4
        ]]>
	</select>

    <!-- 유저 n번의 서평 총 갯수 : likecheck는 그냥 임의로 갖다 씀 -->
    <!-- reviewcnt -->
    <select id="reviewcnt" resultType="MybookVo" parameterType="int">
		<![CDATA[
        select count(review_no) likecheck
        from review
        where user_no = #{userNo}
        ]]>
	</select>

    <!-- 리뷰넘버 n의 유저넘버 -->
    <!-- reviewByUser -->
    <select id="reviewByUser" resultMap="reviewNoAndUserNo" parameterType="Long">
		<![CDATA[
        select user_no   userNo,
               review_no reviewNo
        from review
        where review_no = #{reviewNo}
        ]]>
	</select>

    <!-- 리뷰넘버 n번의 삭제 -->
    <!-- delete -->
    <delete id="delete" parameterType="Long">
		<![CDATA[
        DELETE
        FROM review
        WHERE review_no = #{reviewNo}
        ]]>
	</delete>

    <!-- 유저번호, 감정태그 주면은 해당 감정태그 서평만 출력 -->
    <!-- emoList -->
    <select id="emoList" resultType="com.javaex.dto.mybook.EmotionListResponse" parameterType="map">
		<![CDATA[
		select r.review_no           reviewNo,
			   IFNULL(ru.likecnt, 0) likecnt,
			   r.style_no            styleNo,
			   r.emo_no              emoNo,
			   r.emo_name            emoName,
			   r.book_no             bookNo,
			   r.book_title          bookTitle,
			   r.user_no             userNo,
			   r.nickname,
			   r.review_content      reviewContent,
			   r.review_date         reviewDate
		from (select r.review_no,
					 s.style_no,
					 e.emo_no,
					 e.emo_name,
					 r.book_no,
					 b.book_title,
					 u.user_no,
					 u.nickname,
					 r.review_content,
					 r.review_date
			  from review r,
				   style s,
				   emotion e,
				   users u,
				   books b
			  where e.emo_no = s.emo_no
				and r.style_no = s.style_no
				and r.user_no = u.user_no
				and b.book_no = r.book_no
			  order by r.review_date desc) r
				 left outer join
			 (select review_no, count(review_no) likecnt
			  from review_user
			  group by review_no) ru
			 on r.review_no = ru.review_no
		where r.user_no = #{userNo}
		  and emo_name = #{emoName}
        ]]>
	</select>


</mapper>